{"version":3,"file":"static/js/736.a61a0246.chunk.js","mappings":"+NA2CA,UAtCgB,WAEhB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA2BE,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAASJ,EAAAA,EAAAA,MAgBb,OAbFK,QAAQC,IAAIF,IAEZG,EAAAA,EAAAA,YAAU,YACN,iBAAC,qGAC2BC,EAAAA,EAAAA,IAAoBT,GAD/C,OACOU,EADP,OAECN,EAAQM,GAFT,0CAAD,EAID,GAAE,CAACV,KAOF,0BACsB,IAAnBG,EAAQQ,QACT,iCAAE,sCACE,wBACGR,EAAQS,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACX,2BACE,wBAAKD,KACL,6BAAKC,OAFEF,EADE,UAOP,kDAIjB,C","sources":["pages/Reviews.jsx"],"sourcesContent":["import { fetchMovieByReviews } from 'fakeApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nconst Reviews = () => {\n\nconst { movieId } = useParams();\nconst [reviews, setCast] = useState([]);\nconst params = useParams()\n\n\nconsole.log(params)\n\nuseEffect(() => {\n    (async () => {\n      const listReviews = await fetchMovieByReviews(movieId);\n      setCast(listReviews);\n    })();\n  }, [movieId]);\n\n\n// const backLinkHref = location.state?.from ?? '/movies/:movieId';\n\n\n  return (\n    <main>\n      {reviews.length !== 0 ? ( \n      <><h2>Reviews:</h2>\n          <ul>\n            {reviews.map(({id, author, content}) => (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p> {content}</p>\n              </li>\n            ))}\n          </ul>\n          </>) : (<h3>Reviews are missing </h3>) }\n\n    </main>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setCast","params","console","log","useEffect","fetchMovieByReviews","listReviews","length","map","id","author","content"],"sourceRoot":""}