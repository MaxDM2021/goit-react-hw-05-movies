{"version":3,"file":"static/js/471.3ae634ef.chunk.js","mappings":"6NAIaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAQ1B,OACE,kBAAMA,SAPW,SAACC,GAClBA,EAAEC,iBACFF,EAASC,EAAEE,OAAOC,SAASC,UAAUC,OACrCL,EAAEE,OAAOI,OACV,EAG+BC,UAAU,aAAxC,WACA,oBAAQC,KAAK,SAASD,UAAU,oBAAhC,WACA,SAAC,MAAD,KACE,iBAAMA,UAAU,0BAAhB,wBAGF,kBACEA,UAAU,mBACVC,KAAK,OACLC,KAAK,YACLC,aAAa,MACbC,WAAS,EACTC,YAAY,oBAKjB,E,wCCkBD,EAxCe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOX,EAAP,KAAkBY,EAAlB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAkBA,OARAC,EAAAA,EAAAA,YAAU,WACJf,IACFgB,EAAAA,EAAAA,IAAgBhB,GAAWiB,KAAKH,EAEnC,GAAE,CAACd,KAKF,6BACE,SAACN,EAAD,CAAWC,SAjBM,SAAAuB,GACnB,GAAqB,KAAjBA,EAAMC,OACR,OAAOC,EAAAA,GAAAA,MAAY,mKAErBR,EAAQM,EACT,IAaIL,EAAOQ,OAAS,IACf,wBACGR,EAAOS,KAAI,SAAAC,GAAK,OACf,eAAmBA,MAAOA,EAA1B,UACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMlB,GAAxC,SACGc,EAAMK,SAFFL,EAAME,GADA,QAW1B,C","sources":["components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { ImSearch } from 'react-icons/im';\nimport 'components/Styles/styles.css';\n\n\nexport const SearchBox = ({ onSubmit }) => {\n\n  const onSubmitForm=(e)=>{\n    e.preventDefault();\n    onSubmit(e.target.elements.movieName.value);\n    e.target.reset()\n  }\n\n  return (\n    <form onSubmit={onSubmitForm} className=\"SearchForm\">\n    <button type=\"submit\" className=\"SearchForm-button\">\n    <ImSearch />\n      <span className=\"SearchForm-button-label\">Search</span>\n    </button>\n\n    <input\n      className=\"SearchForm-input\"\n      type=\"text\"\n      name=\"movieName\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search movies\"\n    />\n  </form>\n\n  );\n};\n\n\n\n\n\n","import { toast } from 'react-toastify';\n\nimport { SearchBox } from 'components/SearchBox';\nimport { fetchMovieQuery } from 'fakeApi';\nimport { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const location = useLocation();\n\n  const [movieName, setName] = useState('');\n  const [movies, setMovies] = useState([]);\n  // const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = query => {\n    if (query.trim() === '') {\n      return toast.error('Введите название изображения!');\n    }\n    setName(query);\n  };\n\n  useEffect(() => {\n    if (movieName) {\n      fetchMovieQuery(movieName).then(setMovies);\n    }\n  }, [movieName]);\n\n  // Как работает useEffect: Если hitName изменятся, запустятся все фунции вложенные в useEffect\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleSubmit} />\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id} movie={movie}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchBox","onSubmit","e","preventDefault","target","elements","movieName","value","reset","className","type","name","autoComplete","autoFocus","placeholder","location","useLocation","useState","setName","movies","setMovies","useEffect","fetchMovieQuery","then","query","trim","toast","length","map","movie","to","id","state","from","title"],"sourceRoot":""}